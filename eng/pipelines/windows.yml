# Windows legs
jobs:

# Legs with Helix testing
- template: corefx-base.yml
  parameters:
    name: WinWithHelix
    displayName: Windows
    strategy:
      matrix:
        # netcoreapp windows x64 debug
        x64_Debug:
          _configuration: Debug
          _archGroup: x64
          framework: netcoreapp
          helixQueues: $(_netcoreappWindowsQueues)+$(_nanoQueue)

        # netcoreapp windows x86 release
        x86_Release:
          _configuration: Release
          _archGroup: x86
          framework: netcoreapp
          helixQueues: $(_netcoreappWindowsQueues)

        NETFX_x86_Release:
          _configuration: Release
          _archGroup: x86
          framework: netfx
          helixQueues: $(_uapNetfxQueue)

        UWP_CoreCLR_x64_Debug:
          _configuration: Debug
          _archGroup: x64
          framework: uap
          helixQueues: $(_uapNetfxQueue)

    pool:
      name: Hosted VS2017
    targetOS: Windows_NT

# Legs without Helix testing
- template: /eng/pipelines/corefx-base.yml
  parameters:
    name: WinNoHelix
    displayName: Windows
    strategy:
      matrix:
        UWP_NETNative_x86_Release:
          _configuration: Release
          _archGroup: x86
          framework: uapaot

    submitToHelix: false
    pool:
      name: Hosted VS2017
    targetOS: Windows_NT

- template: /eng/pipelines/corefx-base.yml
  parameters:
    name: WinAllConfigurations
    displayName: Packaging All Configurations
    strategy:
      matrix:
        x64_Debug:
          _configuration: Debug
          _archGroup: x64
          framework: allConfigurations

    useCustomBuildSteps: true
    customBuildSteps:
      - script: build.cmd
                -ci
                $(framework)
                /p:ArchGroup=$(_archGroup)
                /p:ConfigurationGroup=$(_configuration)
                /p:RuntimeOS=win10
        displayName: Build Packages
      - script: build.cmd
                -ci
                -test
                /p:TargetGroup=netstandard
                /p:ArchGroup=$(_archGroup)
                /p:ConfigurationGroup=$(_configuration)
                /p:RuntimeOS=win10
        displayName: Build Netstandard Test Suite
      - script: build.cmd
                -ci
                -test
                $(framework)
                /p:ArchGroup=$(_archGroup)
                /p:ConfigurationGroup=$(_configuration)
        displayName: Run Package Tests